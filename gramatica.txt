S->  MOD FUNC2 { LINE }S'
S'-> S | &
MOD -> tipo | mod tipo

FUNC-> var(PAR)
FUNC2->var(PAR2)

PAR -> PAR'PAR
PAR'-> VAL | &

PAR2 -> PAR2'PAR2
PAR2'-> tipo VAL | &

VAL -> VAL' B
B-> oper VAL' |   VAL'
VAL' -> VAL" | (VAL)
VAL"-> var | string | constNumerica | FUNC

LINE -> LINE'LINE | 
LINE'-> {LINE} | LINE"
LINE"->DECL | ATT | FOR | WHILE | IF |& | FUNC;
 
DECL-> tipo var = VAL ;
ATT -> var = VAL ; 
FOR -> for(DECL, VAL , ATT)LINE' 
WHILE -> while(VAL) LINE'
IF - > if(VAL)LINE' ELSE 
ELSE -> else LINE' | &


